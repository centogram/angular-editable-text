<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
!function(){"use strict";angular.module("gg.editableText",[])}(),function(){"use strict";angular.module("gg.editableText",["puElasticInput"]).directive("editableText",["EditableTextHelper",function(a){return{scope:{editableText:"=",editMode:"=",placeholder:"@",onChange:"&"},transclude:!0,template:'<span ng-class="{\'is-placeholder\': placeholder && !editingValue}" tooltip-placement="bottom" tooltip="Rename"><input ng-blur="isEditing=false;" ng-click="onInputClick()" ng-keydown="onKeyPress($event)" ng-model="editingValue" placeholder="{{placeholder}}" type="text" pu-elastic-input pu-elastic-input-minwidth="auto" pu-elastic-input-maxwidth="auto" /><span ng-hide="isEditing" ng-transclude></span><span ng-show="isWorking" class="'+a.workingClassName+'">'+a.workingText+"</span></span>",link:function(a,b,c){var d,e=b.find("input");a.isEditing=!!a.editMode,a.editingValue=a.editableText,b.addClass("gg-editable-text"),a.spanClick=function(b){console.log(b),a.isEditing=!0},a.onInputClick=function(){a.isEditing=!0,c.hasOwnProperty("selectAll")&&e.select()},a.onKeyPress=function(a){console.log(a);var b=e[0];return 13===a.which?void $(b).blur():void 0},a.$watch("isEditing",function(f,g){var h;e[0];void 0!==c.editMode&&(a.editMode=f),b[f?"addClass":"removeClass"]("editing"),f||(c.onChange&&f!==g&&a.editingValue!=d?(h=a.onChange({value:a.editingValue}),h&&h.then?(a.isWorking=!0,h.then(function(b){a.editableText=a.editingValue=b,a.isWorking=!1},function(){a.editingValue=a.editableText,a.isWorking=!1})):h?a.editableText=a.editingValue=h:a.editingValue=a.editableText):a.editableText=a.editingValue)}),a.$watch("editMode",function(b){a.isEditing=!!b}),a.$watch("editableText",function(b){d=b,a.editingValue=b})}}}])}(),function(){angular.module("gg.editableText").provider("EditableTextHelper",function(){var a="Working..",b="";this.setWorkingText=function(b){return a=b,this},this.setWorkingClassName=function(a){return b=a,this},this.$get=function(){return{workingText:a,workingClassName:b}}})}();
=======
!function(){"use strict";angular.module("gg.editableText",[])}(),function(){"use strict";angular.module("gg.editableText",["puElasticInput"]).directive("editableText",["$timeout","EditableTextHelper",function(a,b){return{scope:{editableText:"=",editMode:"=",placeholder:"@",onChange:"&"},transclude:!0,template:'<span ng-class="{\'is-placeholder\': placeholder && !editingValue}"><input ng-blur="isEditing=false;" ng-click="onInputClick()" ng-keydown="onKeyPress($event)" ng-model="editingValue" placeholder="{{placeholder}}" type="text" pu-elastic-input pu-elastic-input-minwidth="auto" pu-elastic-input-maxwidth="auto" /></span>',link:function(b,c,d){var e,f=c.find("input");a(function(){$(f[0]).width($(c).width())}),b.isEditing=!!b.editMode,b.editingValue=b.editableText,c.addClass("gg-editable-text"),b.onInputClick=function(){b.isEditing=!0},b.onKeyPress=function(a){var b=f[0];return 13===a.which?void $(b).blur():void 0},b.$watch("isEditing",function(a,g){var h;f[0];void 0!==d.editMode&&(b.editMode=a),c[a?"addClass":"removeClass"]("editing"),a||(d.onChange&&a!==g&&b.editingValue!=e?(h=b.onChange({value:b.editingValue}),h&&h.then?(b.isWorking=!0,h.then(function(a){b.editableText=b.editingValue=a,b.isWorking=!1},function(){b.editingValue=b.editableText,b.isWorking=!1})):h?b.editableText=b.editingValue=h:b.editingValue=b.editableText):b.editableText=b.editingValue)}),b.$watch("editMode",function(a){b.isEditing=!!a}),b.$watch("editableText",function(a){e=a,b.editingValue=a})}}}])}(),function(){angular.module("gg.editableText").provider("EditableTextHelper",function(){var a="Working..",b="";this.setWorkingText=function(b){return a=b,this},this.setWorkingClassName=function(a){return b=a,this},this.$get=function(){return{workingText:a,workingClassName:b}}})}();
>>>>>>> General cleanup
=======
!function(){"use strict";angular.module("gg.editableText",[])}(),function(){"use strict";angular.module("gg.editableText",["puElasticInput"]).directive("editableText",["$timeout","EditableTextHelper",function(a,b){return{scope:{editableText:"=",editMode:"=",placeholder:"@",onChange:"&"},transclude:!0,template:'<span ng-class="{\'is-placeholder\': placeholder && !editingValue}"><input ng-blur="isEditing=false;" ng-click="onInputClick()" ng-keydown="onKeyPress($event)" ng-model="editingValue" placeholder="{{placeholder}}"type="text" pu-elastic-input pu-elastic-input-minwidth="auto" pu-elastic-input-maxwidth="auto" /></span>',link:function(b,c,d){var e,f=c.find("input");a(function(){$(f[0]).width($(c).width())}),b.isEditing=!!b.editMode,b.editingValue=b.editableText,c.addClass("gg-editable-text"),b.onInputClick=function(){b.isEditing=!0,d.hasOwnProperty("selectAll")&&f.select()},b.onKeyPress=function(d){var e=f[0];13===d.which?($(e).blur(),a(function(){$(f[0]).width($(c).width())})):27===d.which&&(b.editingValue=b.editableText,$(e).blur())},b.$watch("isEditing",function(a,g){var h;f[0];void 0!==d.editMode&&(b.editMode=a),c[a?"addClass":"removeClass"]("editing"),a||(d.onChange&&a!==g&&b.editingValue!=e?(h=b.onChange({value:b.editingValue}),h&&h.then?(b.isWorking=!0,h.then(function(a){b.editableText=b.editingValue=a,b.isWorking=!1},function(){b.editingValue=b.editableText,b.isWorking=!1})):h?b.editableText=b.editingValue=h:b.editingValue=b.editableText):b.editableText=b.editingValue)}),b.$watch("editMode",function(a){b.isEditing=!!a}),b.$watch("editableText",function(a){e=a,b.editingValue=a})}}}])}(),function(){angular.module("gg.editableText").provider("EditableTextHelper",function(){var a="Working..",b="";this.setWorkingText=function(b){return a=b,this},this.setWorkingClassName=function(a){return b=a,this},this.$get=function(){return{workingText:a,workingClassName:b}}})}();
>>>>>>> Minor fixes, including escape behavior
=======
!function(){"use strict";angular.module("gg.editableText",[])}(),function(){"use strict";angular.module("gg.editableText",["puElasticInput"]).directive("editableText",["$timeout","EditableTextHelper",function(a,b){return{scope:{editableText:"=",editMode:"=",placeholder:"@",onChange:"&",onError:"&"},transclude:!0,template:'<span ng-class="{\'is-placeholder\': placeholder && !editingValue}"><input ng-blur="isEditing=false;" ng-click="onInputClick()" ng-keydown="onKeyPress($event)" ng-model="editingValue" placeholder="{{placeholder}}"type="text" pu-elastic-input pu-elastic-input-minwidth="auto" pu-elastic-input-maxwidth="auto" /></span>',link:function(b,c,d){var e,f=c.find("input");a(function(){$(f[0]).width($(c).width())}),b.isEditing=!!b.editMode,b.editingValue=b.editableText,c.addClass("gg-editable-text"),b.onInputClick=function(){b.isEditing=!0,d.hasOwnProperty("selectAll")&&f.select()},b.onKeyPress=function(d){var e=f[0];13===d.which?($(e).blur(),a(function(){$(f[0]).width($(c).width())})):27===d.which&&(b.editingValue=b.editableText,$(e).blur())},b.$watch("isEditing",function(a,g){var h;f[0];void 0!==d.editMode&&(b.editMode=a),c[a?"addClass":"removeClass"]("editing"),a||(d.onChange&&a!==g&&b.editingValue!=e?(h=b.onChange({value:b.editingValue}),h&&h.then?(b.isWorking=!0,h.then(function(a){b.editableText=b.editingValue=a,b.isWorking=!1},function(){b.onError&&b.onError(),b.editingValue=b.editableText,b.isWorking=!1})):h?b.editableText=b.editingValue=h:b.editingValue=b.editableText):b.editableText=b.editingValue)}),b.$watch("editMode",function(a){b.isEditing=!!a}),b.$watch("editableText",function(a){e=a,b.editingValue=a})}}}])}(),function(){angular.module("gg.editableText").provider("EditableTextHelper",function(){var a="Working..",b="";this.setWorkingText=function(b){return a=b,this},this.setWorkingClassName=function(a){return b=a,this},this.$get=function(){return{workingText:a,workingClassName:b}}})}();
>>>>>>> Added onError option
